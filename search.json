[{"path":"https://rinterface.github.io/shinyHeatmap/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 shinyHeatmap authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://rinterface.github.io/shinyHeatmap/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Granjon. Author, maintainer.","code":""},{"path":"https://rinterface.github.io/shinyHeatmap/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Granjon D (2023). shinyHeatmap: Usage Heatmap Shiny apps. https://github.com/RinteRface/shinyHeatmap, https://rinterface.github.io/shinyHeatmap/.","code":"@Manual{,   title = {shinyHeatmap: Usage Heatmap for Shiny apps},   author = {David Granjon},   year = {2023},   note = {https://github.com/RinteRface/shinyHeatmap, https://rinterface.github.io/shinyHeatmap/}, }"},{"path":"https://rinterface.github.io/shinyHeatmap/index.html","id":"shinyheatmap","dir":"","previous_headings":"","what":"Usage Heatmap for Shiny apps","title":"Usage Heatmap for Shiny apps","text":"goal shinyHeatmap provide free local alternative advanced user tracking platform Hotjar. shinyHeatmap generates beautiful persistent visual heatmaps, representing app usage across many user sessions. Commute explorer Shiny app (2021 Shiny Contest winner). ever wondered: left action button used? people notice new tab? top left checkbox still useful? give try! ’re concerned data privacy, shinyHeatmap records x y clicks coordinates window.","code":""},{"path":"https://rinterface.github.io/shinyHeatmap/index.html","id":"demo","dir":"","previous_headings":"","what":"Demo","title":"Usage Heatmap for Shiny apps","text":"recoding app deployed . Browse get heatmap.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://rinterface.github.io/shinyHeatmap/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Usage Heatmap for Shiny apps","text":"can install development version shinyHeatmap GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"RinteRface/shinyHeatmap\")"},{"path":"https://rinterface.github.io/shinyHeatmap/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Usage Heatmap for Shiny apps","text":"shinyHeatmap requires 2 functions: with_heatmap(), UI side. process_heatmap(), server side. following part, provide instructions.","code":""},{"path":"https://rinterface.github.io/shinyHeatmap/index.html","id":"how-to-use-it","dir":"","previous_headings":"Getting started","what":"How to use it","title":"Usage Heatmap for Shiny apps","text":"app must www folder since heatmap data stored www/heatmap-data.json default. ui.R, wrap UI inside with_heatmap(). contains necessary dependencies (JavaScript code, …) record display heatmap. server.R, call process_heatmap(). Overall, recovers coordinates click JS side store www/heatmap-<USER_AGENT>-<DATE>.json. may used later preview heatmap aggregating compatible user sessions. instance, mobile platforms aggregated desktop since coordinates incorrect. vanilla shiny templates like fluidPage, don’t need change anything. However, complex templates, can pass heatmap container CSS selector target parameter process_heatmap(target = \".wrapper\"). app takes time load, timeout parameters available. case rely packages {waiter}. complex patterns, may want use trigger parameter control record heatmap. See navbar example . Locally, can test heatmap recording using browsing http://127.0.0.1:<PORT>?get_heatmap, ?get_heatmap ensuring run app preview mode heatmap. hoods, process_heatmap() call download_heatmap(), read data stored JSON files, generate heatmap save png file. default, download_heatmap() show tiny UI app. allows see timeline app usage shown . disable UI, can call download_heatmap(show_ui = FALSE), show aggregated data well take screenshot heatmap area. Deploy app server choice (Rstudio Connect, Shiny server, …) let end-users interact . preview heatmap deployed app, 2 solutions: Browse app url query parameter <APP_URL>?get_heatmap, run heatmap display mode don’t record extra actions interacting . Dump deployed app www folder copy locally. Run local app <APP_URL>?get_heatmap 3. Note: Since process_heatmap() clever enough switch recording display, don’t recommand using record_heatmap() download_heatmap() directly. , don’t forget remove record_heatmap() don’t generate extra logs inspecting heatmap. shows example record heatmap:","code":"library(shiny) library(shinyHeatmap)  # Define UI for application that draws a histogram ui <- with_heatmap(   fluidPage(     # Application title     titlePanel(\"Old Faithful Geyser Data\"),     # Sidebar with a slider input for number of bins      sidebarLayout(       sidebarPanel(         sliderInput(           \"bins\",           \"Number of bins:\",           min = 1,           max = 50,           value = 30         )       ),       # Show a plot of the generated distribution       mainPanel(plotOutput(\"distPlot\"))     )   ) )  # Define server logic required to draw a histogram server <- function(input, output, session) {      process_heatmap()      output$distPlot <- renderPlot({     # generate bins based on input$bins from ui.R     x    <- faithful[, 2]     bins <- seq(min(x), max(x), length.out = input$bins + 1)          # draw the histogram with the specified number of bins     hist(x, breaks = bins, col = 'darkgray', border = 'white')   }) }  # Run the application  shinyApp(ui = ui, server = server)"},{"path":"https://rinterface.github.io/shinyHeatmap/index.html","id":"app-with-navbar","dir":"","previous_headings":"Getting started","what":"App with navbar","title":"Usage Heatmap for Shiny apps","text":"app navbar like shiny::navbarPage() dashboard sidebar items, ’ll need record one heatmap per tab. can achieve since shinyHeatmap 0.2.0.9000 like : Give id navbar menu. Pass trigger parameter process_heatmap() (record_heatmap() download_heatmap()). browse multiple pages, ’ll toggle heatmap visibility thanks new toggle button. necessary heatmap z-index set maximum can’t click anywhere else , except toggle heatmap button.","code":"library(shiny) library(shinyHeatmap)  # Define UI for application that draws a histogram ui <- with_heatmap(   navbarPage(     id = \"navbar\",     \"Navbar!\",     tabPanel(       \"Plot\",       sidebarLayout(         sidebarPanel(radioButtons(           \"plotType\", \"Plot type\",           c(\"Scatter\" = \"p\", \"Line\" = \"l\")         )),         mainPanel(plotOutput(\"plot\"))       )     ),     tabPanel(\"Summary\", verbatimTextOutput(\"summary\")),     navbarMenu(       \"More\",       tabPanel(\"Table\", DT::dataTableOutput(\"table\")),       tabPanel(         \"About\",         fluidRow(           column(6, \"Blabla\"),           column(             3,             img(               class = \"img-polaroid\",               src = paste0(                 \"http://upload.wikimedia.org/\",                 \"wikipedia/commons/9/92/\",                 \"1919_Ford_Model_T_Highboy_Coupe.jpg\"               )             ),             tags$small(               \"Source: Photographed at the Bay State Antique \",               \"Automobile Club's July 10, 2005 show at the \",               \"Endicott Estate in Dedham, MA by \",               a(href = \"http://commons.wikimedia.org/wiki/User:Sfoskett\",                 \"User:Sfoskett\")             )           )         )       )     )   ))  # Define server logic required to draw a histogram server <- function(input, output, session) {   #record_heatmap(   #  trigger = reactive(input$navbar),   #  target = \"body\"   #)   #download_heatmap(trigger = reactive(input$navbar))      process_heatmap(trigger = reactive(input$navbar), target = \"body\")      output$plot <- renderPlot({     plot(cars, type=input$plotType)   })      output$summary <- renderPrint({     summary(cars)   })      output$table <- DT::renderDataTable({     DT::datatable(cars)   }) }  # Run the application shinyApp(ui = ui, server = server)"},{"path":"https://rinterface.github.io/shinyHeatmap/index.html","id":"options","dir":"","previous_headings":"Getting started","what":"Options","title":"Usage Heatmap for Shiny apps","text":"shinyHeatmap allows tweak heatmap style lines code. may achieved options parameter expects list properties available heatmap.js documentation. instance, change points radius color: ideal app contains custom design like following example.","code":"process_heatmap(   options = list(     radius = 10,     maxOpacity = .5,     minOpacity = 0,     blur = .75,     gradient =  list(       \".5\" = \"blue\",       \".8\" = \"red\",       \".95\" = \"white\"     )   ) )"},{"path":"https://rinterface.github.io/shinyHeatmap/index.html","id":"acknowledgement","dir":"","previous_headings":"","what":"Acknowledgement","title":"Usage Heatmap for Shiny apps","text":"shinyHeatmap proudly powered excellent free heatmap.js library. Thanks @pa7 making possible.","code":""},{"path":"https://rinterface.github.io/shinyHeatmap/reference/download_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Show recorded heatmap — download_heatmap","title":"Show recorded heatmap — download_heatmap","text":"Show download record_heatmap data.","code":""},{"path":"https://rinterface.github.io/shinyHeatmap/reference/download_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show recorded heatmap — download_heatmap","text":"","code":"download_heatmap(   trigger = NULL,   path = \"www\",   filename = \"heatmap.png\",   timeout = 10,   show_ui = TRUE,   options = NULL,   session = shiny::getDefaultReactiveDomain(),   ... )"},{"path":"https://rinterface.github.io/shinyHeatmap/reference/download_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show recorded heatmap — download_heatmap","text":"trigger Reactive trigger initialized heatmap recording. useful app contains tabs navbar. path Previously saved heatmap data persistence. filename Screenshot file name. timeout Necessary page needs time load. Expressed milliseconds. show_ui Whether show download UI. Default TRUE. options Slot heatmap options. Expect (nested) list. See https://www.patrick-wied./static/heatmapjs/docs.html#heatmap-configure. session Shiny session object. Useful store heatmap data. ... Internal. use.","code":""},{"path":"https://rinterface.github.io/shinyHeatmap/reference/download_heatmap_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Download heatmap UI — download_heatmap_ui","title":"Download heatmap UI — download_heatmap_ui","text":"Download heatmap UI","code":""},{"path":"https://rinterface.github.io/shinyHeatmap/reference/download_heatmap_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download heatmap UI — download_heatmap_ui","text":"","code":"download_heatmap_ui()"},{"path":"https://rinterface.github.io/shinyHeatmap/reference/get_heatmap_records.html","id":null,"dir":"Reference","previous_headings":"","what":"Get heatmap file records — get_heatmap_records","title":"Get heatmap file records — get_heatmap_records","text":"List heatmap recordings","code":""},{"path":"https://rinterface.github.io/shinyHeatmap/reference/get_heatmap_records.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get heatmap file records — get_heatmap_records","text":"","code":"get_heatmap_records(path)"},{"path":"https://rinterface.github.io/shinyHeatmap/reference/get_heatmap_records.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get heatmap file records — get_heatmap_records","text":"path Recordings location.","code":""},{"path":"https://rinterface.github.io/shinyHeatmap/reference/get_heatmap_records.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get heatmap file records — get_heatmap_records","text":"vector containing full path recordings.","code":""},{"path":"https://rinterface.github.io/shinyHeatmap/reference/heatmap_deps.html","id":null,"dir":"Reference","previous_headings":"","what":"Dependencies — heatmap_deps","title":"Dependencies — heatmap_deps","text":"JS CSS assets","code":""},{"path":"https://rinterface.github.io/shinyHeatmap/reference/heatmap_deps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dependencies — heatmap_deps","text":"","code":"heatmap_deps()"},{"path":"https://rinterface.github.io/shinyHeatmap/reference/init_heatmap_storage.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize heatmap data temporary storage. — init_heatmap_storage","title":"Initialize heatmap data temporary storage. — init_heatmap_storage","text":"Initialize heatmap data temporary storage.","code":""},{"path":"https://rinterface.github.io/shinyHeatmap/reference/init_heatmap_storage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize heatmap data temporary storage. — init_heatmap_storage","text":"","code":"init_heatmap_storage(session, trigger)"},{"path":"https://rinterface.github.io/shinyHeatmap/reference/init_heatmap_storage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize heatmap data temporary storage. — init_heatmap_storage","text":"session Shiny session object. Useful store heatmap data. trigger Reactive trigger initialized heatmap recording. useful app contains tabs navbar.","code":""},{"path":"https://rinterface.github.io/shinyHeatmap/reference/init_heatmap_storage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize heatmap data temporary storage. — init_heatmap_storage","text":"Side effect create list session$userData store heatmap data.","code":""},{"path":"https://rinterface.github.io/shinyHeatmap/reference/process_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Either record or show heatmap depending on\nconfiguration. — process_heatmap","title":"Either record or show heatmap depending on\nconfiguration. — process_heatmap","text":"default, process_heatmap records heatmap. However, set options(\"shinyheatmap.mode\" = 'display'), function run display mode see results. useful want use shinytest2 control app display results without affecting deployed production app.","code":""},{"path":"https://rinterface.github.io/shinyHeatmap/reference/process_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Either record or show heatmap depending on\nconfiguration. — process_heatmap","text":"","code":"process_heatmap(...)"},{"path":"https://rinterface.github.io/shinyHeatmap/reference/process_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Either record or show heatmap depending on\nconfiguration. — process_heatmap","text":"... Pass parameters record_heatmap download_heatmap.","code":""},{"path":"https://rinterface.github.io/shinyHeatmap/reference/read_heatmap_records.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and aggregate heatmap records — read_heatmap_records","title":"Read and aggregate heatmap records — read_heatmap_records","text":"Scale coordinates make sure render screens.","code":""},{"path":"https://rinterface.github.io/shinyHeatmap/reference/read_heatmap_records.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and aggregate heatmap records — read_heatmap_records","text":"","code":"read_heatmap_records(records, viewport_dims)"},{"path":"https://rinterface.github.io/shinyHeatmap/reference/read_heatmap_records.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and aggregate heatmap records — read_heatmap_records","text":"records Returned get_heatmap_records. viewport_dims Obtained JS stored session$input$viewport_dims.","code":""},{"path":"https://rinterface.github.io/shinyHeatmap/reference/read_heatmap_records.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and aggregate heatmap records — read_heatmap_records","text":"list aggregated data.","code":""},{"path":"https://rinterface.github.io/shinyHeatmap/reference/record_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Record heatmap data to a file — record_heatmap","title":"Record heatmap data to a file — record_heatmap","text":"JS side, Shiny creates input$heatmap_data containing current click data recorded file","code":""},{"path":"https://rinterface.github.io/shinyHeatmap/reference/record_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Record heatmap data to a file — record_heatmap","text":"","code":"record_heatmap(   trigger = NULL,   path = \"www\",   target = \".container-fluid\",   type = c(\"click\", \"move\"),   timeout = 10,   session = shiny::getDefaultReactiveDomain(),   ... )"},{"path":"https://rinterface.github.io/shinyHeatmap/reference/record_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Record heatmap data to a file — record_heatmap","text":"trigger Reactive trigger initialized heatmap recording. useful app contains tabs navbar. path Previously saved heatmap data persistence. target Container selector hosting heatmap canvas. Default Shiny fluidPage container. careful change use another template. type Event type: click mouse move. Default click. timeout Necessary page needs time load. Expressed milliseconds. session Shiny session object. Useful store heatmap data. ... Internal. use.","code":""},{"path":"https://rinterface.github.io/shinyHeatmap/reference/take_heatmap_screenshot.html","id":null,"dir":"Reference","previous_headings":"","what":"Take heatmap screenshot — take_heatmap_screenshot","title":"Take heatmap screenshot — take_heatmap_screenshot","text":"Take heatmap screenshot","code":""},{"path":"https://rinterface.github.io/shinyHeatmap/reference/take_heatmap_screenshot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take heatmap screenshot — take_heatmap_screenshot","text":"","code":"take_heatmap_screenshot(filename, target)"},{"path":"https://rinterface.github.io/shinyHeatmap/reference/take_heatmap_screenshot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Take heatmap screenshot — take_heatmap_screenshot","text":"filename save screenshot. target Element capture within page. CSS selector ...","code":""},{"path":"https://rinterface.github.io/shinyHeatmap/reference/validate_heatmap_trigger.html","id":null,"dir":"Reference","previous_headings":"","what":"Safety checks — validate_heatmap_trigger","title":"Safety checks — validate_heatmap_trigger","text":"Safety checks","code":""},{"path":"https://rinterface.github.io/shinyHeatmap/reference/validate_heatmap_trigger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safety checks — validate_heatmap_trigger","text":"","code":"validate_heatmap_trigger(trigger)"},{"path":"https://rinterface.github.io/shinyHeatmap/reference/validate_heatmap_trigger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safety checks — validate_heatmap_trigger","text":"trigger Reactive trigger initialized heatmap recording. useful app contains tabs navbar.","code":""},{"path":"https://rinterface.github.io/shinyHeatmap/reference/validate_heatmap_trigger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safety checks — validate_heatmap_trigger","text":"Stop app conditions met.","code":""},{"path":"https://rinterface.github.io/shinyHeatmap/reference/with_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Heatmap container for shiny app — with_heatmap","title":"Heatmap container for shiny app — with_heatmap","text":"Include necessary dependencies.","code":""},{"path":"https://rinterface.github.io/shinyHeatmap/reference/with_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heatmap container for shiny app — with_heatmap","text":"","code":"with_heatmap(...)"},{"path":"https://rinterface.github.io/shinyHeatmap/reference/with_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heatmap container for shiny app — with_heatmap","text":"... Shiny UI code.","code":""},{"path":[]},{"path":"https://rinterface.github.io/shinyHeatmap/news/index.html","id":"minor-change-0-2-2-9000","dir":"Changelog","previous_headings":"","what":"Minor change","title":"shinyHeatmap 0.2.2.9000","text":"Adjust z-index pushbar heatmap canvas. Remove delay R code. space heatmap buttons (toggle options).","code":""},{"path":[]},{"path":"https://rinterface.github.io/shinyHeatmap/news/index.html","id":"new-feature-0-2-1-9000","dir":"Changelog","previous_headings":"","what":"New feature","title":"shinyHeatmap 0.2.1.9000","text":"Add filter select platform app accessed (mobile, desktop). avoids mix incompatible logs.","code":""},{"path":"https://rinterface.github.io/shinyHeatmap/news/index.html","id":"minor-change-0-2-1-9000","dir":"Changelog","previous_headings":"","what":"Minor change","title":"shinyHeatmap 0.2.1.9000","text":"slider select dates replaced selectInput. can display dates input choices easier read (Note: slider animation capability lost).","code":""},{"path":[]},{"path":"https://rinterface.github.io/shinyHeatmap/news/index.html","id":"new-feature-0-2-0-9200","dir":"Changelog","previous_headings":"","what":"New feature","title":"shinyHeatmap 0.2.0.9200","text":"Introducing process_heatmap(), wrapper around record_heatmap() download_heatmap(). process_heatmap() record heatmap default unless specify query parameter ?get_heatmap, allow display results. can now toggle heatmap visibility running record_heatmap() able change page multi-tabs apps. necessary heatmap z-index set maximum can’t click anywhere else , expect toggle heatmap button.","code":""},{"path":"https://rinterface.github.io/shinyHeatmap/news/index.html","id":"breaking-changes-0-2-0-9200","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"shinyHeatmap 0.2.0.9200","text":"Added new trigger parameter record_heatmap() download_heatmap() first parameters. allows record heatmaps multi-tabs apps like shiny::navbarPage() (See inst/examples/navbar). Leave trigger NULL one page apps. trigger expects reactive expression like reactive(input$navbar). target value now removed record_heatmap(). Instead, written file www/*/target.txt record_heatmap(), subsequently read record_heatmap(). old apps without file, can manually create one touch www/<WHATEVER_SUBFOLDER>/target.txt type DOM selector value, instance .container-fluid.","code":""},{"path":"https://rinterface.github.io/shinyHeatmap/news/index.html","id":"shinyheatmap-0009000","dir":"Changelog","previous_headings":"","what":"shinyHeatmap 0.0.0.9000","title":"shinyHeatmap 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
